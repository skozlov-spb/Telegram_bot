from aiogram import Router, F
from aiogram.types import CallbackQuery

from keyboards.all_keyboards import main_kb
from db_handler.db_class import Database
from db_handler.db_utils import DBUtils
from create_bot import bot

router = Router()

db = Database()
db_utils = DBUtils(db=db, bot=bot)


@router.callback_query(F.data == "check_subscription")
async def check_subscription_callback(callback: CallbackQuery):
    user_id = callback.from_user.id
    await db_utils.db.connect()

    is_spbu_member = await db_utils.is_user_channel_member(user_id)

    if is_spbu_member:
        await callback.message.delete()  # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π
        await callback.message.answer(
            "üéâ–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º.",
            reply_markup=main_kb(user_id),
            parse_mode="Markdown"
        )
        await db_utils.log_user_activity(user_id, activity_type='subscribed_channels', theme_id=None)  # –õ–æ–≥–∏—Ä—É–µ–º
    else:
        await callback.answer("–í—ã –µ—â–µ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª.", show_alert=True)  # –ü–æ–∫–∞–∂–µ–º –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ

    await db_utils.db.close()
